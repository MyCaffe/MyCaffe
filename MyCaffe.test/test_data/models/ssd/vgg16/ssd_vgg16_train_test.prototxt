name: "VGG_VOC0712_SSD_300x300_train"
layer 
{
   name: "data"
   type: "AnnotatedData"
   top: "data"
   top: "label"
   freeze_learning: True
   include 
   {
      phase: TRAIN
   }
   transform_param 
   {
      mirror: True
      mean_value: 104
      mean_value: 117
      mean_value: 123
      color_order: RGB
      resize_param 
      {
         option 
         {
            active: True
         }
         active: True
         prob: 1
         resize_mode: WARP
         pad_mode: CONSTANT
         height: 300
         width: 300
         height_scale: 0
         width_scale: 0
         interp_mode: LINEAR
         interp_mode: AREA
         interp_mode: NEAREST
         interp_mode: CUBIC
         interp_mode: LANCZOS4
      }
      distortion_param 
      {
         option 
         {
            active: True
         }
         active: True
         brightness_prob: 0
         brightness_delta: 0
         contrast_prob: 0
         contrast_lower: 0.5
         contrast_upper: 1.5
         saturation_prob: 0
         saturation_lower: 0.5
         saturation_upper: 1.5
         random_order_prob: 0
         use_gpu: True
         random_seed: 0
      }
      emit_constraint 
      {
         option 
         {
            active: True
         }
         emit_type: CENTER
         emit_overlap: 0
      }
      mask_param 
      {
         option 
         {
            active: False
         }
         boundary_left: 0
         boundary_right: 0
         boundary_top: 0
         boundary_bottom: 0
      }
      label_mapping 
      {
         option 
         {
            active: False
         }
      }
   }
   data_param 
   {
      source: "VOC0712.training"
      batch_size: 8
      backend: IMAGEDB
      enable_random_selection: True
   }
   annotated_data_param 
   {
      anno_type: 0
      label_map_file: C:\ProgramData\MyCaffe\test_data\data\ssd\VOC0712\labelmap_voc.prototxt
      batch_sampler 
      {
         use_original_image: True
         max_sample: 1
         max_trials: 1
         sampler 
         {
            min_scale: 1
            max_scale: 1
            min_aspect_ratio: 1
            max_aspect_ratio: 1
         }
      }
      batch_sampler 
      {
         use_original_image: True
         max_sample: 1
         max_trials: 50
         sampler 
         {
            min_scale: 0.3
            max_scale: 1
            min_aspect_ratio: 0.5
            max_aspect_ratio: 2
         }
         sample_constraint 
         {
            min_jaccard_overlap: 0.1
         }
      }
      batch_sampler 
      {
         use_original_image: True
         max_sample: 1
         max_trials: 50
         sampler 
         {
            min_scale: 0.3
            max_scale: 1
            min_aspect_ratio: 0.5
            max_aspect_ratio: 2
         }
         sample_constraint 
         {
            min_jaccard_overlap: 0.3
         }
      }
      batch_sampler 
      {
         use_original_image: True
         max_sample: 1
         max_trials: 50
         sampler 
         {
            min_scale: 0.3
            max_scale: 1
            min_aspect_ratio: 0.5
            max_aspect_ratio: 2
         }
         sample_constraint 
         {
            min_jaccard_overlap: 0.5
         }
      }
      batch_sampler 
      {
         use_original_image: True
         max_sample: 1
         max_trials: 50
         sampler 
         {
            min_scale: 0.3
            max_scale: 1
            min_aspect_ratio: 0.5
            max_aspect_ratio: 2
         }
         sample_constraint 
         {
            min_jaccard_overlap: 0.7
         }
      }
      batch_sampler 
      {
         use_original_image: True
         max_sample: 1
         max_trials: 50
         sampler 
         {
            min_scale: 0.3
            max_scale: 1
            min_aspect_ratio: 0.5
            max_aspect_ratio: 2
         }
         sample_constraint 
         {
            min_jaccard_overlap: 0.9
         }
      }
      batch_sampler 
      {
         use_original_image: True
         max_sample: 1
         max_trials: 50
         sampler 
         {
            min_scale: 0.3
            max_scale: 1
            min_aspect_ratio: 0.5
            max_aspect_ratio: 2
         }
         sample_constraint 
         {
            max_jaccard_overlap: 1
         }
      }
   }
}
layer 
{
   name: "data"
   type: "AnnotatedData"
   top: "data"
   top: "label"
   freeze_learning: True
   include 
   {
      phase: TEST
   }
   transform_param 
   {
      mean_value: 104
      mean_value: 117
      mean_value: 123
      color_order: RGB
      resize_param 
      {
         option 
         {
            active: True
         }
         active: True
         prob: 1
         resize_mode: WARP
         pad_mode: CONSTANT
         height: 300
         width: 300
         height_scale: 0
         width_scale: 0
         interp_mode: LINEAR
      }
      distortion_param 
      {
         option 
         {
            active: False
         }
         active: False
         brightness_prob: 0
         brightness_delta: 0
         contrast_prob: 0
         contrast_lower: 0.5
         contrast_upper: 1.5
         saturation_prob: 0
         saturation_lower: 0.5
         saturation_upper: 1.5
         random_order_prob: 0
         use_gpu: True
         random_seed: 0
      }
      mask_param 
      {
         option 
         {
            active: False
         }
         boundary_left: 0
         boundary_right: 0
         boundary_top: 0
         boundary_bottom: 0
      }
      label_mapping 
      {
         option 
         {
            active: False
         }
      }
   }
   data_param 
   {
      source: "VOC0712.testing"
      batch_size: 8
      backend: IMAGEDB
      enable_random_selection: True
   }
   annotated_data_param 
   {
      anno_type: 0
      label_map_file: C:\ProgramData\MyCaffe\test_data\data\ssd\VOC0712\labelmap_voc.prototxt
      batch_sampler 
      {
         use_original_image: True
         max_sample: 0
         max_trials: 100
         sampler 
         {
            min_scale: 1
            max_scale: 1
            min_aspect_ratio: 1
            max_aspect_ratio: 1
         }
      }
   }
}
layer 
{
   name: "conv1_1"
   type: "Convolution"
   bottom: "data"
   top: "conv1_1"
   freeze_learning: True
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      pad: 1
      num_output: 64
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "relu1_1"
   type: "ReLU"
   bottom: "conv1_1"
   top: "conv1_1"
   freeze_learning: True
}
layer 
{
   name: "conv1_2"
   type: "Convolution"
   bottom: "conv1_1"
   top: "conv1_2"
   freeze_learning: True
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      pad: 1
      num_output: 64
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "relu1_2"
   type: "ReLU"
   bottom: "conv1_2"
   top: "conv1_2"
   freeze_learning: True
}
layer 
{
   name: "pool1"
   type: "Pooling"
   bottom: "conv1_2"
   top: "pool1"
   freeze_learning: True
   pooling_param 
   {
      kernel_size: 2
      stride: 2
      pool: MAX
   }
}
layer 
{
   name: "conv2_1"
   type: "Convolution"
   bottom: "pool1"
   top: "conv2_1"
   freeze_learning: True
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      pad: 1
      num_output: 128
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "relu2_1"
   type: "ReLU"
   bottom: "conv2_1"
   top: "conv2_1"
   freeze_learning: True
}
layer 
{
   name: "conv2_2"
   type: "Convolution"
   bottom: "conv2_1"
   top: "conv2_2"
   freeze_learning: True
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      pad: 1
      num_output: 128
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "relu2_2"
   type: "ReLU"
   bottom: "conv2_2"
   top: "conv2_2"
   freeze_learning: True
}
layer 
{
   name: "pool2"
   type: "Pooling"
   bottom: "conv2_2"
   top: "pool2"
   freeze_learning: True
   pooling_param 
   {
      kernel_size: 2
      stride: 2
      pool: MAX
   }
}
layer 
{
   name: "conv3_1"
   type: "Convolution"
   bottom: "pool2"
   top: "conv3_1"
   freeze_learning: True
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      pad: 1
      num_output: 256
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "relu3_1"
   type: "ReLU"
   bottom: "conv3_1"
   top: "conv3_1"
   freeze_learning: True
}
layer 
{
   name: "conv3_2"
   type: "Convolution"
   bottom: "conv3_1"
   top: "conv3_2"
   freeze_learning: True
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      pad: 1
      num_output: 256
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "relu3_2"
   type: "ReLU"
   bottom: "conv3_2"
   top: "conv3_2"
   freeze_learning: True
}
layer 
{
   name: "conv3_3"
   type: "Convolution"
   bottom: "conv3_2"
   top: "conv3_3"
   freeze_learning: True
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      pad: 1
      num_output: 256
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "relu3_3"
   type: "ReLU"
   bottom: "conv3_3"
   top: "conv3_3"
   freeze_learning: True
}
layer 
{
   name: "pool3"
   type: "Pooling"
   bottom: "conv3_3"
   top: "pool3"
   freeze_learning: True
   pooling_param 
   {
      kernel_size: 2
      stride: 2
      pool: MAX
   }
}
layer 
{
   name: "conv4_1"
   type: "Convolution"
   bottom: "pool3"
   top: "conv4_1"
   freeze_learning: True
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      pad: 1
      num_output: 512
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "relu4_1"
   type: "ReLU"
   bottom: "conv4_1"
   top: "conv4_1"
   freeze_learning: True
}
layer 
{
   name: "conv4_2"
   type: "Convolution"
   bottom: "conv4_1"
   top: "conv4_2"
   freeze_learning: True
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      pad: 1
      num_output: 512
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "relu4_2"
   type: "ReLU"
   bottom: "conv4_2"
   top: "conv4_2"
   freeze_learning: True
}
layer 
{
   name: "conv4_3"
   type: "Convolution"
   bottom: "conv4_2"
   top: "conv4_3"
   freeze_learning: True
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      pad: 1
      num_output: 512
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "relu4_3"
   type: "ReLU"
   bottom: "conv4_3"
   top: "conv4_3"
   freeze_learning: True
}
layer 
{
   name: "pool4"
   type: "Pooling"
   bottom: "conv4_3"
   top: "pool4"
   freeze_learning: True
   pooling_param 
   {
      kernel_size: 2
      stride: 2
      pool: MAX
   }
}
layer 
{
   name: "conv5_1"
   type: "Convolution"
   bottom: "pool4"
   top: "conv5_1"
   freeze_learning: True
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      pad: 1
      dilation: 1
      num_output: 512
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "relu5_1"
   type: "ReLU"
   bottom: "conv5_1"
   top: "conv5_1"
   freeze_learning: True
}
layer 
{
   name: "conv5_2"
   type: "Convolution"
   bottom: "conv5_1"
   top: "conv5_2"
   freeze_learning: True
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      pad: 1
      dilation: 1
      num_output: 512
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "relu5_2"
   type: "ReLU"
   bottom: "conv5_2"
   top: "conv5_2"
   freeze_learning: True
}
layer 
{
   name: "conv5_3"
   type: "Convolution"
   bottom: "conv5_2"
   top: "conv5_3"
   freeze_learning: True
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      pad: 1
      dilation: 1
      num_output: 512
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "relu5_3"
   type: "ReLU"
   bottom: "conv5_3"
   top: "conv5_3"
}
layer 
{
   name: "pool5"
   type: "Pooling"
   bottom: "conv5_3"
   top: "pool5"
   pooling_param 
   {
      kernel_size: 3
      stride: 1
      pad: 1
      pool: MAX
   }
}
layer 
{
   name: "fc6"
   type: "Convolution"
   bottom: "pool5"
   top: "fc6"
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      pad: 6
      dilation: 6
      num_output: 1024
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "relu6"
   type: "ReLU"
   bottom: "fc6"
   top: "fc6"
}
layer 
{
   name: "fc7"
   type: "Convolution"
   bottom: "fc6"
   top: "fc7"
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 1
      num_output: 1024
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "relu7"
   type: "ReLU"
   bottom: "fc7"
   top: "fc7"
}
layer 
{
   name: "conv6_1"
   type: "Convolution"
   bottom: "fc7"
   top: "conv6_1"
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 1
      stride: 1
      pad: 0
      num_output: 256
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "conv6_1_relu"
   type: "ReLU"
   bottom: "conv6_1"
   top: "conv6_1"
}
layer 
{
   name: "conv6_2"
   type: "Convolution"
   bottom: "conv6_1"
   top: "conv6_2"
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      stride: 2
      pad: 1
      num_output: 512
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "conv6_2_relu"
   type: "ReLU"
   bottom: "conv6_2"
   top: "conv6_2"
}
layer 
{
   name: "conv7_1"
   type: "Convolution"
   bottom: "conv6_2"
   top: "conv7_1"
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 1
      stride: 1
      pad: 0
      num_output: 128
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "conv7_1_relu"
   type: "ReLU"
   bottom: "conv7_1"
   top: "conv7_1"
}
layer 
{
   name: "conv7_2"
   type: "Convolution"
   bottom: "conv7_1"
   top: "conv7_2"
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      stride: 2
      pad: 1
      num_output: 256
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "conv7_2_relu"
   type: "ReLU"
   bottom: "conv7_2"
   top: "conv7_2"
}
layer 
{
   name: "conv8_1"
   type: "Convolution"
   bottom: "conv7_2"
   top: "conv8_1"
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 1
      stride: 1
      pad: 0
      num_output: 128
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "conv8_1_relu"
   type: "ReLU"
   bottom: "conv8_1"
   top: "conv8_1"
}
layer 
{
   name: "conv8_2"
   type: "Convolution"
   bottom: "conv8_1"
   top: "conv8_2"
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      stride: 1
      pad: 0
      num_output: 256
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "conv8_2_relu"
   type: "ReLU"
   bottom: "conv8_2"
   top: "conv8_2"
}
layer 
{
   name: "conv9_1"
   type: "Convolution"
   bottom: "conv8_2"
   top: "conv9_1"
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 1
      stride: 1
      pad: 0
      num_output: 128
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "conv9_1_relu"
   type: "ReLU"
   bottom: "conv9_1"
   top: "conv9_1"
}
layer 
{
   name: "conv9_2"
   type: "Convolution"
   bottom: "conv9_1"
   top: "conv9_2"
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      stride: 1
      pad: 0
      num_output: 256
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "conv9_2_relu"
   type: "ReLU"
   bottom: "conv9_2"
   top: "conv9_2"
}
layer 
{
   name: "conv4_3_norm"
   type: "Normalization2"
   bottom: "conv4_3"
   top: "conv4_3_norm"
   normalization2_param 
   {
      across_spatial: False
      channel_shared: False
      esp: 1E-10
      scale_filler 
      {
         type: "constant"
         value: 20
      }
   }
}
layer 
{
   name: "conv4_3_norm_mbox_loc"
   type: "Convolution"
   bottom: "conv4_3_norm"
   top: "conv4_3_norm_mbox_loc"
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      stride: 1
      pad: 1
      num_output: 16
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "conv4_3_norm_mbox_loc_perm"
   type: "Permute"
   bottom: "conv4_3_norm_mbox_loc"
   top: "conv4_3_norm_mbox_loc_perm"
   permute_param 
   {
      order: 0
      order: 2
      order: 3
      order: 1
   }
}
layer 
{
   name: "conv4_3_norm_mbox_loc_flat"
   type: "Flatten"
   bottom: "conv4_3_norm_mbox_loc_perm"
   top: "conv4_3_norm_mbox_loc_flat"
   flatten_param 
   {
      axis: 1
      end_axis: -1
   }
}
layer 
{
   name: "conv4_3_norm_mbox_conf"
   type: "Convolution"
   bottom: "conv4_3_norm"
   top: "conv4_3_norm_mbox_conf"
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      stride: 1
      pad: 1
      num_output: 84
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "conv4_3_norm_mbox_conf_perm"
   type: "Permute"
   bottom: "conv4_3_norm_mbox_conf"
   top: "conv4_3_norm_mbox_conf_perm"
   permute_param 
   {
      order: 0
      order: 2
      order: 3
      order: 1
   }
}
layer 
{
   name: "conv4_3_norm_mbox_conf_flat"
   type: "Flatten"
   bottom: "conv4_3_norm_mbox_conf_perm"
   top: "conv4_3_norm_mbox_conf_flat"
   flatten_param 
   {
      axis: 1
      end_axis: -1
   }
}
layer 
{
   name: "conv4_3_norm_mbox_priorbox"
   type: "PriorBox"
   bottom: "conv4_3_norm"
   bottom: "data"
   top: "conv4_3_norm_mbox_priorbox"
   prior_box_param 
   {
      min_size: 30
      max_size: 60
      aspect_ratio: 2
      flip: True
      clip: False
      variance: 0.1
      variance: 0.1
      variance: 0.2
      variance: 0.2
      step: 8
      offset: 0.5
   }
}
layer 
{
   name: "fc7_mbox_loc"
   type: "Convolution"
   bottom: "fc7"
   top: "fc7_mbox_loc"
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      stride: 1
      pad: 1
      num_output: 24
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "fc7_mbox_loc_perm"
   type: "Permute"
   bottom: "fc7_mbox_loc"
   top: "fc7_mbox_loc_perm"
   permute_param 
   {
      order: 0
      order: 2
      order: 3
      order: 1
   }
}
layer 
{
   name: "fc7_mbox_loc_flat"
   type: "Flatten"
   bottom: "fc7_mbox_loc_perm"
   top: "fc7_mbox_loc_flat"
   flatten_param 
   {
      axis: 1
      end_axis: -1
   }
}
layer 
{
   name: "fc7_mbox_conf"
   type: "Convolution"
   bottom: "fc7"
   top: "fc7_mbox_conf"
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      stride: 1
      pad: 1
      num_output: 126
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "fc7_mbox_conf_perm"
   type: "Permute"
   bottom: "fc7_mbox_conf"
   top: "fc7_mbox_conf_perm"
   permute_param 
   {
      order: 0
      order: 2
      order: 3
      order: 1
   }
}
layer 
{
   name: "fc7_mbox_conf_flat"
   type: "Flatten"
   bottom: "fc7_mbox_conf_perm"
   top: "fc7_mbox_conf_flat"
   flatten_param 
   {
      axis: 1
      end_axis: -1
   }
}
layer 
{
   name: "fc7_mbox_priorbox"
   type: "PriorBox"
   bottom: "fc7"
   bottom: "data"
   top: "fc7_mbox_priorbox"
   prior_box_param 
   {
      min_size: 60
      max_size: 111
      aspect_ratio: 2
      aspect_ratio: 3
      flip: True
      clip: False
      variance: 0.1
      variance: 0.1
      variance: 0.2
      variance: 0.2
      step: 16
      offset: 0.5
   }
}
layer 
{
   name: "conv6_2_mbox_loc"
   type: "Convolution"
   bottom: "conv6_2"
   top: "conv6_2_mbox_loc"
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      stride: 1
      pad: 1
      num_output: 24
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "conv6_2_mbox_loc_perm"
   type: "Permute"
   bottom: "conv6_2_mbox_loc"
   top: "conv6_2_mbox_loc_perm"
   permute_param 
   {
      order: 0
      order: 2
      order: 3
      order: 1
   }
}
layer 
{
   name: "conv6_2_mbox_loc_flat"
   type: "Flatten"
   bottom: "conv6_2_mbox_loc_perm"
   top: "conv6_2_mbox_loc_flat"
   flatten_param 
   {
      axis: 1
      end_axis: -1
   }
}
layer 
{
   name: "conv6_2_mbox_conf"
   type: "Convolution"
   bottom: "conv6_2"
   top: "conv6_2_mbox_conf"
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      stride: 1
      pad: 1
      num_output: 126
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "conv6_2_mbox_conf_perm"
   type: "Permute"
   bottom: "conv6_2_mbox_conf"
   top: "conv6_2_mbox_conf_perm"
   permute_param 
   {
      order: 0
      order: 2
      order: 3
      order: 1
   }
}
layer 
{
   name: "conv6_2_mbox_conf_flat"
   type: "Flatten"
   bottom: "conv6_2_mbox_conf_perm"
   top: "conv6_2_mbox_conf_flat"
   flatten_param 
   {
      axis: 1
      end_axis: -1
   }
}
layer 
{
   name: "conv6_2_mbox_priorbox"
   type: "PriorBox"
   bottom: "conv6_2"
   bottom: "data"
   top: "conv6_2_mbox_priorbox"
   prior_box_param 
   {
      min_size: 111
      max_size: 162
      aspect_ratio: 2
      aspect_ratio: 3
      flip: True
      clip: False
      variance: 0.1
      variance: 0.1
      variance: 0.2
      variance: 0.2
      step: 32
      offset: 0.5
   }
}
layer 
{
   name: "conv7_2_mbox_loc"
   type: "Convolution"
   bottom: "conv7_2"
   top: "conv7_2_mbox_loc"
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      stride: 1
      pad: 1
      num_output: 24
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "conv7_2_mbox_loc_perm"
   type: "Permute"
   bottom: "conv7_2_mbox_loc"
   top: "conv7_2_mbox_loc_perm"
   permute_param 
   {
      order: 0
      order: 2
      order: 3
      order: 1
   }
}
layer 
{
   name: "conv7_2_mbox_loc_flat"
   type: "Flatten"
   bottom: "conv7_2_mbox_loc_perm"
   top: "conv7_2_mbox_loc_flat"
   flatten_param 
   {
      axis: 1
      end_axis: -1
   }
}
layer 
{
   name: "conv7_2_mbox_conf"
   type: "Convolution"
   bottom: "conv7_2"
   top: "conv7_2_mbox_conf"
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      stride: 1
      pad: 1
      num_output: 126
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "conv7_2_mbox_conf_perm"
   type: "Permute"
   bottom: "conv7_2_mbox_conf"
   top: "conv7_2_mbox_conf_perm"
   permute_param 
   {
      order: 0
      order: 2
      order: 3
      order: 1
   }
}
layer 
{
   name: "conv7_2_mbox_conf_flat"
   type: "Flatten"
   bottom: "conv7_2_mbox_conf_perm"
   top: "conv7_2_mbox_conf_flat"
   flatten_param 
   {
      axis: 1
      end_axis: -1
   }
}
layer 
{
   name: "conv7_2_mbox_priorbox"
   type: "PriorBox"
   bottom: "conv7_2"
   bottom: "data"
   top: "conv7_2_mbox_priorbox"
   prior_box_param 
   {
      min_size: 162
      max_size: 213
      aspect_ratio: 2
      aspect_ratio: 3
      flip: True
      clip: False
      variance: 0.1
      variance: 0.1
      variance: 0.2
      variance: 0.2
      step: 64
      offset: 0.5
   }
}
layer 
{
   name: "conv8_2_mbox_loc"
   type: "Convolution"
   bottom: "conv8_2"
   top: "conv8_2_mbox_loc"
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      stride: 1
      pad: 1
      num_output: 16
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "conv8_2_mbox_loc_perm"
   type: "Permute"
   bottom: "conv8_2_mbox_loc"
   top: "conv8_2_mbox_loc_perm"
   permute_param 
   {
      order: 0
      order: 2
      order: 3
      order: 1
   }
}
layer 
{
   name: "conv8_2_mbox_loc_flat"
   type: "Flatten"
   bottom: "conv8_2_mbox_loc_perm"
   top: "conv8_2_mbox_loc_flat"
   flatten_param 
   {
      axis: 1
      end_axis: -1
   }
}
layer 
{
   name: "conv8_2_mbox_conf"
   type: "Convolution"
   bottom: "conv8_2"
   top: "conv8_2_mbox_conf"
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      stride: 1
      pad: 1
      num_output: 84
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "conv8_2_mbox_conf_perm"
   type: "Permute"
   bottom: "conv8_2_mbox_conf"
   top: "conv8_2_mbox_conf_perm"
   permute_param 
   {
      order: 0
      order: 2
      order: 3
      order: 1
   }
}
layer 
{
   name: "conv8_2_mbox_conf_flat"
   type: "Flatten"
   bottom: "conv8_2_mbox_conf_perm"
   top: "conv8_2_mbox_conf_flat"
   flatten_param 
   {
      axis: 1
      end_axis: -1
   }
}
layer 
{
   name: "conv8_2_mbox_priorbox"
   type: "PriorBox"
   bottom: "conv8_2"
   bottom: "data"
   top: "conv8_2_mbox_priorbox"
   prior_box_param 
   {
      min_size: 213
      max_size: 264
      aspect_ratio: 2
      flip: True
      clip: False
      variance: 0.1
      variance: 0.1
      variance: 0.2
      variance: 0.2
      step: 100
      offset: 0.5
   }
}
layer 
{
   name: "conv9_2_mbox_loc"
   type: "Convolution"
   bottom: "conv9_2"
   top: "conv9_2_mbox_loc"
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      stride: 1
      pad: 1
      num_output: 16
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "conv9_2_mbox_loc_perm"
   type: "Permute"
   bottom: "conv9_2_mbox_loc"
   top: "conv9_2_mbox_loc_perm"
   permute_param 
   {
      order: 0
      order: 2
      order: 3
      order: 1
   }
}
layer 
{
   name: "conv9_2_mbox_loc_flat"
   type: "Flatten"
   bottom: "conv9_2_mbox_loc_perm"
   top: "conv9_2_mbox_loc_flat"
   flatten_param 
   {
      axis: 1
      end_axis: -1
   }
}
layer 
{
   name: "conv9_2_mbox_conf"
   type: "Convolution"
   bottom: "conv9_2"
   top: "conv9_2_mbox_conf"
   param 
   {
      lr_mult: 1
   }
   param 
   {
      lr_mult: 2
      decay_mult: 0
   }
   convolution_param 
   {
      kernel_size: 3
      stride: 1
      pad: 1
      num_output: 84
      weight_filler 
      {
         type: "xavier"
         variance_norm: FAN_IN
      }
      bias_filler 
      {
         type: "constant"
         value: 0
      }
   }
}
layer 
{
   name: "conv9_2_mbox_conf_perm"
   type: "Permute"
   bottom: "conv9_2_mbox_conf"
   top: "conv9_2_mbox_conf_perm"
   permute_param 
   {
      order: 0
      order: 2
      order: 3
      order: 1
   }
}
layer 
{
   name: "conv9_2_mbox_conf_flat"
   type: "Flatten"
   bottom: "conv9_2_mbox_conf_perm"
   top: "conv9_2_mbox_conf_flat"
   flatten_param 
   {
      axis: 1
      end_axis: -1
   }
}
layer 
{
   name: "conv9_2_mbox_priorbox"
   type: "PriorBox"
   bottom: "conv9_2"
   bottom: "data"
   top: "conv9_2_mbox_priorbox"
   prior_box_param 
   {
      min_size: 264
      max_size: 315
      aspect_ratio: 2
      flip: True
      clip: False
      variance: 0.1
      variance: 0.1
      variance: 0.2
      variance: 0.2
      step: 300
      offset: 0.5
   }
}
layer 
{
   name: "mbox_loc"
   type: "Concat"
   bottom: "conv4_3_norm_mbox_loc_flat"
   bottom: "fc7_mbox_loc_flat"
   bottom: "conv6_2_mbox_loc_flat"
   bottom: "conv7_2_mbox_loc_flat"
   bottom: "conv8_2_mbox_loc_flat"
   bottom: "conv9_2_mbox_loc_flat"
   top: "mbox_loc"
}
layer 
{
   name: "mbox_conf"
   type: "Concat"
   bottom: "conv4_3_norm_mbox_conf_flat"
   bottom: "fc7_mbox_conf_flat"
   bottom: "conv6_2_mbox_conf_flat"
   bottom: "conv7_2_mbox_conf_flat"
   bottom: "conv8_2_mbox_conf_flat"
   bottom: "conv9_2_mbox_conf_flat"
   top: "mbox_conf"
}
layer 
{
   name: "mbox_priorbox"
   type: "Concat"
   bottom: "conv4_3_norm_mbox_priorbox"
   bottom: "fc7_mbox_priorbox"
   bottom: "conv6_2_mbox_priorbox"
   bottom: "conv7_2_mbox_priorbox"
   bottom: "conv8_2_mbox_priorbox"
   bottom: "conv9_2_mbox_priorbox"
   top: "mbox_priorbox"
   concat_param 
   {
      axis: 2
   }
}
layer 
{
   name: "mbox_loss"
   type: "MultiBoxLoss"
   bottom: "mbox_loc"
   bottom: "mbox_conf"
   bottom: "mbox_priorbox"
   bottom: "label"
   top: "mbox_loss"
   propagate_down: True
   propagate_down: True
   propagate_down: False
   propagate_down: False
   include 
   {
      phase: TRAIN
   }
   loss_param 
   {
      normalization: VALID
   }
   multiboxloss_param 
   {
      loc_loss_type: SMOOTH_L1
      conf_loss_type: SOFTMAX
      loc_weight: 1
      num_classes: 21
      share_location: True
      match_type: PER_PREDICTION
      overlap_threshold: 0.5
      background_label_id: 0
      use_difficult_gt: True
      neg_pos_ratio: 3
      neg_overlap: 0.5
      code_type: CENTER_SIZE
      encode_variance_in_target: False
      map_object_to_agnostic: False
      ignore_cross_boundary_bbox: False
      bp_inside: False
      mining_type: MAX_NEGATIVE
      nms_param 
      {
         option 
         {
            active: True
         }
         nms_threshold: 0.3
         eta: 1
      }
      sample_size: 64
      use_prior_for_nms: False
      use_prior_for_matching: True
      use_gpu: False
   }
}
layer 
{
   name: "mbox_conf_reshape"
   type: "Reshape"
   bottom: "mbox_conf"
   top: "mbox_conf_reshape"
   include 
   {
      phase: TEST
   }
   include 
   {
      phase: RUN
   }
   reshape_param 
   {
      shape 
      {
         dim: 0
         dim: -1
         dim: 21
      }
   }
}
layer 
{
   name: "mbox_conf_softmax"
   type: "Softmax"
   bottom: "mbox_conf_reshape"
   top: "mbox_conf_softmax"
   include 
   {
      phase: TEST
   }
   include 
   {
      phase: RUN
   }
   softmax_param 
   {
      axis: 2
   }
}
layer 
{
   name: "mbox_conf_flatten"
   type: "Flatten"
   bottom: "mbox_conf_softmax"
   top: "mbox_conf_flatten"
   include 
   {
      phase: TEST
   }
   include 
   {
      phase: RUN
   }
   flatten_param 
   {
      axis: 1
      end_axis: -1
   }
}
layer 
{
   name: "detection_out"
   type: "DetectionOutput"
   bottom: "mbox_loc"
   bottom: "mbox_conf_flatten"
   bottom: "mbox_priorbox"
   top: "detection_out"
   include 
   {
      phase: TEST
   }
   include 
   {
      phase: RUN
   }
   detection_output_param 
   {
      num_classes: 21
      share_location: True
      background_label_id: 0
      nms_param 
      {
         option 
         {
            active: False
         }
         nms_threshold: 0.45
         top_k: 400
         eta: 1
      }
      save_output_param 
      {
         option 
         {
            active: False
         }
         output_name_prefix: comp4_det_test_
         output_format: VOC
         label_map_file: C:\ProgramData\MyCaffe\test_data\data\ssd\VOC0712\labelmap_voc.prototxt
         name_size_file: C:\ProgramData\MyCaffe\test_data\data\ssd\VOC0712\test_name_size.txt
         num_test_image: 4952
      }
      code_type: CENTER_SIZE
      variance_encoded_in_target: False
      keep_top_k: 200
      confidence_threshold: 0.01
      visualize: False
   }
}
layer 
{
   name: "detection_eval"
   type: "DetectionEvaluate"
   bottom: "detection_out"
   bottom: "label"
   top: "detection_eval"
   include 
   {
      phase: TEST
   }
   detection_evaluate_param 
   {
      num_classes: 21
      background_label_id: 0
      overlap_threshold: 0.5
      evaluate_difficult_gt: False
      name_size_file: C:\ProgramData\MyCaffe\test_data\data\ssd\VOC0712\test_name_size.txt
      resize_param 
      {
         option 
         {
            active: False
         }
         active: False
         prob: 0
         resize_mode: WARP
         pad_mode: CONSTANT
         height: 0
         width: 0
         height_scale: 0
         width_scale: 0
      }
   }
}
